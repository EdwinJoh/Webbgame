@inject ILocalStorageService localStorage
@inject AuthenticationStateProvider AutenticationStateProvider
@inject IRequestService service



@if (Character == null)
{

}
else
{

    <p>@Character.CharacterName</p>
}





@code {
    public CharacterDto Character { get; set; }


    protected async override Task OnInitializedAsync()
    {
        var authstate = await AutenticationStateProvider.GetAuthenticationStateAsync();
        var user = authstate.User;
        var name = user.Identity.Name;
        if (name != null)
            Character = await service.GetCharacter(name);
    }
}